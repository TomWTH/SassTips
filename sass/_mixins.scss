
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

@mixin center-block {
position:absolute; top:0; bottom:0; left:0; right:0;
      margin:auto; width:100%;
}

/* Center vertical and horizontal */
@mixin centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
/* Usage:
  .footer-wrap {
    width: 450px;
    @include center-block;
  }
*/
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
/*
.element p {
  @include vertical-align;
}
 */


@mixin aspectRatio($widthAspect, $heightAspect) {
  $aspect: $heightAspect/$widthAspect * 100;
  max-width: 100%;
  &:before {
    content: '';
    display: block;
    width: 100%;
    padding-bottom: $aspect+%;
  }

}

/* Cross browser opacity */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
/*
Usage :
.faded-text {
  @include opacity(0.8);
}
*/


/* Generate and display the image in responsive */
@mixin responsive-bg-image($image-width, $image-height) {
  background-size: 100%;
  padding-bottom: percentage($image-height / $image-width);
  height: 0;
  display: block;
}

@mixin aspect-ratio-img($image,$originalHeight,$originalWidth){
  background: url($image) no-repeat center center fixed;
  height : $originalHeight / $originalWidth * $containerSize;
}

// Maintain ratio mixin. Great for responsive grids, or videos.
// https://gist.github.com/brianmcallister/2932463
//
// $ratio - Ratio the element needs to maintain.
//
// Examples
//
//   // A 16:9 ratio would look like this:
//   .element {
//     @include maintain-ratio(16 9);
//   }
@mixin maintain-ratio($ratio: 1 1) {
  @if length($ratio) < 2 or length($ratio) > 2 {
    @warn "$ratio must be a list with two values.";
  }

  $width: 100%;
  $height: percentage(nth($ratio, 2) / nth($ratio, 1));

  width: $width;
  height: 0;
  padding-bottom: ($height)-(3); // -3%
}

/* Border Radius */
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

/* Hide Text */
@mixin hide-text{
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
    height: 0;
    margin: 0;
}
/*
Ex:
.logo{
    background: url("logo.png");
    height:100px;
    width:200px;
    @include hide-text;
}
 */
/* Circle */
@mixin circle($size) {
     width: $size;
     height: $size;
     border-radius: 50%;
}
/*Ex:
.box {
     @include circle(100px);
     background: #fc0;
}
*/



/* Clearfix */
@mixin clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}


/* Bouton mixin */
$padding-btn-defaut: 10px 20px;

@mixin btn-couleur($bg-color: $bleuClair, $bg-color-hover: $bleuFonce, $btn-font-color: #fff, $btn-weight: normal, $padding: $padding-btn-defaut){
    @include font('Lato-Regular', 15px, $btn-font-color);
    background-color: $bg-color;
    color: $btn-font-color;
    margin: 20px 0;
    padding: $padding;
    text-align: center;
    text-transform: uppercase;
    a{
      color: $btn-font-color;
      text-decoration: none;
    }
    &:hover, &:active{
    	background-color: $bg-color-hover;
        text-decoration: none;
    }
}
/*
EX : 
.lien a{
	@include btn-couleur($bleuClair, $bleuFonce); //Les 2 premiers param√©tres suffisent dans la plupart des cas, si besoin, on ajoute color, font-weight et padding.
}
*/

@mixin btn-vide($couleur-btn-vide: bleu, $btn-weight: normal, $padding: 10px 30px 10px 20px){

    @include font('Lato-Regular', 15px);
    border:1px solid $gris1;
    @if $couleur-btn-vide=='bleu'{
    	border-color:$bleuClair;
    	color:$bleuClair;
    }@else if $couleur-btn-vide=='rouge'{
    	border-color:$rougeClair;
    	color:$rougeClair;
    }@else if $couleur-btn-vide=='blanc'{
    	border-color:#fff;
    	color:#fff;
    }
    font-weight: $btn-weight;
    padding: $padding;
    text-align: center;
    text-transform: uppercase;
    background: transparent url('../imgs/picto-btn-vide_#{$couleur-btn-vide}.png') no-repeat 95% center;
    a{
    	@if $couleur-btn-vide=='bleu'{
    		color:$bleuClair;
    	}@else if $couleur-btn-vide=='rouge'{
    		color:$rougeClair;
    	}@else if $couleur-btn-vide=='blanc'{
    		color:#fff;
    	}
    	font-weight: $btn-weight;
    	text-decoration: none!important;
    	&:hover, &:active{
    		@if $couleur-btn-vide=='bleu'{
    			color:$bleuFonce;
    		}@else if $couleur-btn-vide=='rouge'{
    			color:$rougeFonce;
    		}@else if $couleur-btn-vide=='blanc'{
    			color:$gris3;
    		}
    	}
    }
    &:hover, &:active{
    	@if $couleur-btn-vide=='bleu'{
    		border-color:$bleuFonce;
    		color:$bleuFonce;
    	}@else if $couleur-btn-vide=='rouge'{
    		border-color:$rougeFonce;
    		color:$rougeFonce;
    	}@else if $couleur-btn-vide=='blanc'{
    		border-color:$gris3;
    		color:$gris3;
    	}
        text-decoration: none;
        background: transparent url('../imgs/picto-btn-vide_hover_#{$couleur-btn-vide}.png') no-repeat 95% center;
    }
}
/*
EX : 
.lien a{
	@include btn-vide(rouge); //ici on rentre la couleur du btn, et si besoin le weight et le padding
}
*/

@mixin centerMiddle(){
  display: table-cell;
  vertical-align: middle;
  clear: both;
}
/* Ex:
.container-with-floated-children {
  @extend clearfix;
}
*/




// MEDIA QUERIES
@mixin customScreen($from,$to){
  @media (min-width: #{$from}) and (max-width:#{$to}){
    @content;
  }
}
// Media query for landscape orientation detection
@mixin if-landscape {
    @media (orientation: landscape) {
        @content;
    }
}
@mixin mobile{ // 320px
  @media (min-width: #{$screen-xs}) and (max-width:767px){
    @content;
  }
}
@mixin mobile_and_tablet{ // 320px
  @media (min-width: #{$screen-xs}) and (max-width:#{$screen-sm-max}){
    @content;
  }
}
@mixin tablet{ // 768px to 1023px
  @media (min-width: #{$screen-sm}) and (max-width:#{$screen-sm-max}){
    @content;
  }
}
/* Generic laptop - medium */
@mixin medium{ // 1024px
  @media (min-width: #{$screen-md}) {
    @content;
  }
}
/* Desktop Large ----------- */
@mixin large{ // 1200px
  @media (min-width: #{$screen-lg}) {
    @content;
  }
}